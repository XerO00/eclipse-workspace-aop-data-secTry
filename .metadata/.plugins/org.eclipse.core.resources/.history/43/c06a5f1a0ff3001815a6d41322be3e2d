package org.koushik.javabrains.dao;

import java.sql.*;
import javax.sql.DataSource;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;

@Controller
public class JdbcDaoImpl {
 
	    @Autowired
	    private  DataSource dataSource ;
	    
	    private JdbcTemplate jdbcTemplate = new JdbcTemplate();
	    
	    private  Connection connect = null;
	    private  Statement statement = null;
	    private  ResultSet resultSet = null;

	    public  void getCircle() throws Exception {
	        try {

                System.out.println("above the connection process");                   
	            connect = dataSource.getConnection();
	            PreparedStatement statement = connect.prepareStatement("SELECT * from circle");
	            resultSet = statement.executeQuery();
	            
	            while (resultSet.next()) {
	                String id = resultSet.getString("id");
	                String name = resultSet.getString("name");
	                System.out.println("Printing From JDBC connection DAO class");
	                System.out.println("ID: " + id);
	                System.out.println("NAME: " + name);
	            }
	            
	        } catch (Exception e) {

                System.out.println("Inside the catch of connection");
	        	e.printStackTrace();;
	        } finally {

                System.out.println("Inside finally");
	        	close();
	        
	        }
	    }

	    private  void close() {
	        try {

                System.out.println("Indide close method");
	            if (resultSet != null) {
	                resultSet.close();
	            }
	            if (statement != null) {
	                statement.close();
	            }
	            if (connect != null) {
	                connect.close();
	            }
	        } catch (Exception e) {

                System.out.println("Inside close catch");
	        }

	    }
}
